from base64 import b64decode
from hashlib import sha512

from asn1crypto import x509

from infiniteidpq_device_manager.oqspython import oqspython

# Set the serial port name and baud rate
oqs = oqspython.OQS_SIGNATURE(oqspython.OQS_SIG_alg_dilithium_5)

signature = "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"  # noqa: E501

certificate = ""  # noqa: E501


# Prepare message
origin = "https://ria.ee"
challengeNonce = "12345678901234567890123456789012345678901234"
originHash = sha512(origin.encode()).digest()
challengeNonceHash = sha512(challengeNonce.encode()).digest()
hashToBeSigned = sha512(originHash + challengeNonceHash).digest()

# Prepare public key
x509_cert = x509.Certificate.load(b64decode(certificate))

# Generate keypair
result = oqs.verify(
    hashToBeSigned,
    len(hashToBeSigned),
    b64decode(signature),
    oqs.length_signature,
    x509_cert.native["tbs_certificate"]["subject_public_key_info"][
        "public_key"
    ],
)
if result != oqspython.OQS_SUCCESS:
    print("Error verifying signature")
    exit()

print("Finished successfully")
